Please run `conda env list` to see a list of all available environments. Use
`source activate <env>` to activate the environment '<env>'. 

Currently Loaded Modules:
  1) anaconda/anaconda3

 

Tue Apr 12 15:34:37 2022       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 470.57.02    Driver Version: 470.57.02    CUDA Version: 11.4     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  Tesla V100-PCIE...  Off  | 00000000:3B:00.0 Off |                    0 |
| N/A   29C    P0    34W / 250W |      0MiB / 32510MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   1  Tesla V100-PCIE...  Off  | 00000000:D8:00.0 Off |                    0 |
| N/A   31C    P0    35W / 250W |      0MiB / 32510MiB |      2%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
	[4mGPU0	GPU1	mlx5_0	CPU Affinity	NUMA Affinity[0m
GPU0	 X 	SYS	SYS	0,2,4,6	0
GPU1	SYS	 X 	NODE	1,3,5,7	1
mlx5_0	SYS	NODE	 X 		

Legend:

  X    = Self
  SYS  = Connection traversing PCIe as well as the SMP interconnect between NUMA nodes (e.g., QPI/UPI)
  NODE = Connection traversing PCIe as well as the interconnect between PCIe Host Bridges within a NUMA node
  PHB  = Connection traversing PCIe as well as a PCIe Host Bridge (typically the CPU)
  PXB  = Connection traversing multiple PCIe bridges (without traversing the PCIe Host Bridge)
  PIX  = Connection traversing at most a single PCIe bridge
  NV#  = Connection traversing a bonded set of # NVLinks

Using 2 gpus.


Reset trainable parameters of layer = InstanceNorm3d(16, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(4, 16, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(16, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(16, 16, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = Conv3d(4, 16, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(16, 32, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = Conv3d(16, 32, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = Conv3d(128, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = ConvTranspose3d(384, 64, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1), output_padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = ConvTranspose3d(128, 32, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1), output_padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(16, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = ConvTranspose3d(64, 16, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1), output_padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(16, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(16, 16, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(3, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = ConvTranspose3d(32, 3, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1), output_padding=(1, 1, 1))
Reset trainable parameters of layer = Conv3d(3, 3, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(16, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(4, 16, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(16, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(16, 16, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = Conv3d(4, 16, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(16, 32, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = Conv3d(16, 32, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = Conv3d(128, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = ConvTranspose3d(384, 64, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1), output_padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = ConvTranspose3d(128, 32, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1), output_padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(16, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = ConvTranspose3d(64, 16, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1), output_padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(16, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(16, 16, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(3, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = ConvTranspose3d(32, 3, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1), output_padding=(1, 1, 1))
Reset trainable parameters of layer = Conv3d(3, 3, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(16, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(4, 16, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(16, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(16, 16, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = Conv3d(4, 16, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(16, 32, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = Conv3d(16, 32, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = Conv3d(128, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = ConvTranspose3d(384, 64, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1), output_padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = ConvTranspose3d(128, 32, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1), output_padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(16, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = ConvTranspose3d(64, 16, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1), output_padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(16, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(16, 16, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(3, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = ConvTranspose3d(32, 3, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1), output_padding=(1, 1, 1))
Reset trainable parameters of layer = Conv3d(3, 3, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
the prediction of class 2 is all 0, this may result in nan/inf distance.
invalid value encountered in subtract
Reset trainable parameters of layer = InstanceNorm3d(16, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(4, 16, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(16, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(16, 16, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = Conv3d(4, 16, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(16, 32, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = Conv3d(16, 32, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = Conv3d(128, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = ConvTranspose3d(384, 64, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1), output_padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = ConvTranspose3d(128, 32, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1), output_padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(16, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = ConvTranspose3d(64, 16, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1), output_padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(16, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(16, 16, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(3, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = ConvTranspose3d(32, 3, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1), output_padding=(1, 1, 1))
Reset trainable parameters of layer = Conv3d(3, 3, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(16, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(4, 16, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(16, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(16, 16, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = Conv3d(4, 16, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(16, 32, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = Conv3d(16, 32, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = Conv3d(128, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = ConvTranspose3d(384, 64, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1), output_padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = ConvTranspose3d(128, 32, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1), output_padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(16, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = ConvTranspose3d(64, 16, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1), output_padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(16, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = Conv3d(16, 16, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
Reset trainable parameters of layer = InstanceNorm3d(3, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
Reset trainable parameters of layer = ConvTranspose3d(32, 3, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1), output_padding=(1, 1, 1))
Reset trainable parameters of layer = Conv3d(3, 3, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
